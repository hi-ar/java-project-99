plugins {
	id 'application' //s1 for installDist https://docs.gradle.org/current/userguide/application_plugin.html
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.6'
//	id 'checkstyle' //s1
//	id 'jacoco'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

application { //s1 for deploying
	mainClass = 'hexlet.code.AppApplication'
}

//java {
//	toolchain {
//		languageVersion = JavaLanguageVersion.of(21)
//
//	}
//} updated to:
compileJava {
	options.release = 21
	options.encoding = 'UTF-8'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

wrapper {
	gradleVersion = '8.10.2'
	distributionType = Wrapper.DistributionType.ALL
}

configurations { //s2
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation(
			'org.springframework.boot:spring-boot-starter',
			'org.springframework.boot:spring-boot-starter-web', //s1
			'org.springframework.boot:spring-boot-starter-data-jpa', //s2 (@Entity nw)
			'com.querydsl:querydsl-jpa:5.0.0:jakarta', //2 шаг актуал
//			'org.postgresql:postgresql:42.7.2' // try to move compileonly/runtimeonly
	)

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok' //s2

	developmentOnly (
			'org.springframework.boot:spring-boot-devtools', //s1 only for profile dev
			'com.h2database:h2' //s2
	)
	runtimeOnly ( //s2
			'org.postgresql:postgresql'
	)

	annotationProcessor( //s2
			'org.projectlombok:lombok',
			'com.querydsl:querydsl-apt:5.0.0:jakarta', //s2? see above imps
			'jakarta.persistence:jakarta.persistence-api:3.1.0'
	)
}

//tasks.named('test') {
//	useJUnitPlatform()
//}
//
//checkstyle {
//	toolVersion '10.12.1'
//}
//
//jacocoTestReport {
//	reports {
//		xml.required = true
//	}
//}
//
//test {
//	finalizedBy jacocoTestReport
//}
//
//jacocoTestReport { //нужно обе? если это таски, то почему не выделяются task?
//	dependsOn test
//}

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean
